module AdminModel
{
    class IndexListGet
    {
    }

    class IndexListResponse
    {
        Hash String LibraryIndex list_index
    }

    class IndexGet
    {
        String sha256sum
    }

    class IndexDelete
    {
        String sha256sum
    }

    // LibraryIndex is used as IndexResponse

    class LibraryGet
    {
        Array String path
    }

    class LibraryPut
    {
        Array String path
        Array Variant AdminModel {MediaTypeDescriptionVideoContainer MediaTypeDescriptionRaw} type_descriptions
    }

    class LibraryDelete
    {
        Array String path
    }

    class LibraryResponse
    {
        Array FileItem lib_files
        Array DirectoryItem lib_directories

        Array FileItem fs_files
        Array DirectoryItem fs_directories
    }

    class FileItem
    {
        String name
        Optional String checksum
    }

    class DirectoryItem
    {
        String name
    }

    class LogGet
    {
    }

    class LogDelete
    {
        UInt64 count
    }

    class Log
    {
        Array Variant AdminModel {CheckMediaResult CheckMediaError CheckMediaWarning} log
    }

    class CheckMediaResult
    {
        Array String path
    }

    class CheckMediaError
    {
        Array String path
        String reason
    }

    class CheckMediaWarning
    {
        Array String path
        String reason
    }

    class StorageAuthorization
    {
        String file_uri
        String session_id
        UInt64 seconds
        TimePoint time_point
    }

    class SignedStorageAuthorization
    {
        StorageAuthorization token
        Authority authorization
    }

    class Authority
    {
        String address
        String signature
    }

    class MediaSequence
    {
        Bool done
        Array MediaFrame frames
    }
    class MediaFrame
    {
        UInt64 count
        String uri
    }

    class MediaTypeDefinition
    {
        Variant AdminModel {MediaTypeDescriptionVideoContainer MediaTypeDescriptionRaw} type_description
        MediaSequence sequence
    }

    class LibraryIndex
    {
        Array Array String paths
        Array MediaTypeDefinition type_definitions
    }

    class RemoteError
    {
        String message
    }

    class MediaTypeDescriptionVideoContainer
    {
        Optional MediaTypeDescriptionAVStream audio
        Optional MediaTypeDescriptionAVStream video

        String muxer_opt_key
        String muxer_opt_value
        String container_extension
    }

    class MediaTypeDescriptionAVStream
    {
        Optional MediaTypeDescriptionAVStreamTranscode transcode
    }

    class MediaTypeDescriptionAVStreamTranscode
    {
        String codec
        String codec_priv_key
        String codec_priv_value
        Optional MediaTypeDescriptionVideoFilter filter
    }

    class MediaTypeDescriptionVideoFilter
    {
        Bool adjust
        UInt64 height
        UInt64 width
        UInt64 fps
    }
    //  MediaTypeDescriptionVideoContainer related stuff ends here

    class MediaTypeDescriptionRaw
    {
        String mime_type
    }
}
////4
